generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Faculty {
  id           Int            @id @default(autoincrement())
  name         String
  majors       Major[]
  students     Student[]
  users        User[]
  subjects     Subject[]
  AnnualCourse AnnualCourse[]
}

model Major {
  id           Int            @id @default(autoincrement())
  faculty_id   Int
  name         String
  faculty      Faculty        @relation(fields: [faculty_id], references: [id])
  students     Student[]
  users        User[]
  subjects     Subject[]
  AnnualCourse AnnualCourse[]

  @@index([faculty_id])
}

model Student {
  id           Int     @id @default(autoincrement())
  student_id   String  @unique
  password     String
  title_th     String
  firstname_th String
  lastname_th  String
  telephone    String
  faculties_id Int
  majors_id    Int
  certificate  String? @default("")
  profile_img  String? @default("")
  email        String
  actives      Boolean

  faculty Faculty @relation(fields: [faculties_id], references: [id])
  major   Major   @relation(fields: [majors_id], references: [id])

  @@index([faculties_id])
  @@index([majors_id])
}

model User {
  id           Int     @id @default(autoincrement())
  username     String  @unique
  password     String
  firstname    String
  lastname     String
  telephone    String
  email        String
  faculties_id Int?
  majors_id    Int?
  profile_img  String? @default("")
  role         String
  actives      Boolean

  faculty Faculty? @relation(fields: [faculties_id], references: [id])
  major   Major?   @relation(fields: [majors_id], references: [id])

  @@index([faculties_id])
  @@index([majors_id])
}

model Subject {
  id                  String                @id
  faculties           Faculty               @relation(fields: [facultiesId], references: [id])
  facultiesId         Int
  subId               String                @db.VarChar(15)
  subName             String                @db.VarChar(45)
  subUnit             Float
  subGroupId          Int
  major               Major?                @relation(fields: [majorId], references: [id])
  majorId             Int?
  actives             Boolean               @default(false)
  AnnualCourseSubject AnnualCourseSubject[]

  subGroup               SubGroup                 @relation(fields: [subGroupId], references: [id])
  StudentTranscriptGrade StudentTranscriptGrade[]

  @@map("Subject")
}

model AnnualCourse {
  id              Int                   @id @default(autoincrement())
  year            Int
  term            Int
  startDate       DateTime
  endDate         DateTime
  facultyId       Int
  majorId         Int
  faculty         Faculty               @relation(fields: [facultyId], references: [id])
  major           Major                 @relation(fields: [majorId], references: [id])
  subjects        AnnualCourseSubject[]
  actives         Boolean               @default(false)
  StudentTransfer StudentTransfer[]

  @@index([facultyId])
  @@index([majorId])
}

model SubGroup {
  id          Int       @id @default(autoincrement())
  codeSubject String    @default("")
  nameSubject String    @default("")
  description String?   @default("")
  actives     Boolean   @default(true)
  subjects    Subject[]
}

model AnnualCourseSubject {
  id             Int          @id @default(autoincrement())
  annualCourseId Int
  subjectId      String
  annualCourse   AnnualCourse @relation(fields: [annualCourseId], references: [id])
  subject        Subject      @relation(fields: [subjectId], references: [id])

  @@unique([annualCourseId, subjectId])
}

model StudentTransfer {
  id             Int      @id @default(autoincrement())
  studentId      Int
  annualCourseId Int
  status         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  annualCourse AnnualCourse             @relation(fields: [annualCourseId], references: [id])
  grades       StudentTranscriptGrade[]
}

model StudentTranscriptGrade {
  id                 Int    @id @default(autoincrement())
  studentTransfer_id Int
  subjectId          String
  grade              Float

  studentTransfer StudentTransfer @relation(fields: [studentTransfer_id], references: [id])
  subject         Subject         @relation(fields: [subjectId], references: [id])

  @@index([studentTransfer_id])
  @@index([subjectId])
}
